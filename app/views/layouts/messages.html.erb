<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN"
   "http://www.w3.org/TR/html4/strict.dtd">

<html lang="en">
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
	<meta name="Description" content="Opensource Group Chat Social Network written in Ruby On Rails, Conversation: <%= @conversation.name %>">
	<title><%=@conversation.name-%> | EchoWaves (Group Chat Social Network)</title>
  <link rel="shortcut icon" href="/images/favicon.ico" />
 	
  <link rel="stylesheet" href="/stylesheets/screen.css" type="text/css" media="screen, projection">
  <link rel="stylesheet" href="/stylesheets/print.css" type="text/css" media="print"> 

  <link rel="stylesheet" href="/stylesheets/style.css" type="text/css" media="screen, projection">
  <%= stylesheet_link_tag 'livepipe' %>
 	<%= stylesheet_link_tag 'default' %>
 	<%= stylesheet_link_tag 'chat' %>
 	<%= javascript_include_tag :defaults %>
 	<%= javascript_include_tag "i18n/#{I18n.locale}" %>
 	<%= javascript_include_tag "sound" %>
 	<%= javascript_include_tag "misc" %>
 	<%= javascript_include_tag "windowmanager" %>
 	<%= javascript_include_tag "keyboard" %>
 	
	<%= stylesheet_link_tag 'unitip' %>
	<%= javascript_include_tag 'unitip' %>
	<%= javascript_include_tag "ejs" %>
  
	<!--[if IE]>
    <link rel="stylesheet" href="/stylesheets/ie.css" type="text/css" media="screen, projection">
  <![endif]-->
	
 	<%= orbited_javascript %> 		
 	<script>  
  // FIXME: workaround for safari never ending loading issue
  var orig_chooseTransport = Orbited.util.chooseTransport; 
  Orbited.util.chooseTransport = function() { 
      if (BrowserDetect.browser == "Safari") { 
          return Orbited.CometTransports.LongPoll 
      } 
      return orig_chooseTransport(); 
  }
  
 	function stomp_function() {
 		 var output = $('connection_stat_data');
 		// set up shell.
 		// set up stomp client.
 		stomp = new STOMPClient();
 		stomp.onopen = function() {
			output.title = "connecting"
 			output.update('<span class="status_yellow tip">&nbsp;</span>');
 		};
 		stomp.onclose = function(code) {
 			output.update('<span class="status_red tip" title="disconnected">&nbsp;</span>');
 			//try to reconnect
 			// stomp.connect(document.domain, 61613, 'UNIQUE_ID_PER_CLIENT', '');
			stomp.connect('<%=STOMP_HOST%>', <%=STOMP_PORT%>, '<%=h current_user %>', '');
			// stomp.subscribe('CONVERSATION_CHANNEL_<%=@conversation.id%>', {exchange:''});	 		
 		};
 		stomp.onerror = function(error) {
 			alert("onerror: " + error);
 			output.update('<span class="status_red tip" title="error">&nbsp;</span>');
 		};
 		stomp.onerrorframe = function(frame) {
 			alert("onerrorframe: " + frame.body);
 			output.update('<span class="status_red tip" title="frame error">&nbsp;</span>');
 		};
 		stomp.onconnectedframe = function() {
 			output.update('<span class="status_green tip" title="receiving message">&nbsp;</span>');
			stomp.subscribe('CONVERSATION_CHANNEL_<%=@conversation.id%>', {exchange:''});
 		};
 		stomp.onmessageframe = function(frame) {
 		  var json = frame.body.evalJSON();
 			var message_output = $('messages');
			// this is an actual message for current conversation
 			if(frame.headers['destination'].startsWith("CONVERSATION_CHANNEL_") ) {
 			  // render message from JSON
 			  //---------------------------------------------------------------------------
 			  var html = new EJS({url: '/templates/message.ejs'}).render(json);
 				message_output.insert({"bottom":html});
        if(json.meta.system == false) { unitipize($('tip_'+json.message.id)); }
 				Misc.pageScroll();
				Effect.Pulsate('connection_stat_data'); 
			<% if session[:sound] == "on" %>
				Sound.play('/sounds/sound39.mp3');
			<% end %>
 			}	
			// this is a notify conversation message
 			if(frame.headers['destination'].startsWith("CONVERSATION_NOTIFY_CHANNEL_") ) {
			}

 		};
		stomp.connect('<%=STOMP_HOST%>', <%=STOMP_PORT%>, 'user_<%=h current_user %>', '');
 		// setTimeout("stomp.subscribe('CONVERSATION_CHANNEL_<%=@conversation.id%>', {exchange:''})", 5000);

 	};

  </script>
  <%= javascript_include_tag "livepipe/livepipe" %>
  <%= javascript_include_tag "livepipe/tabs" %>

  <script>
  	document.observe('dom:loaded',function(){
  	new Control.Tabs('convo_tabs');
  	
  	new Ajax.Request('/conversations/<%= @conversation.id %>',
      {
        method:'get',
        onSuccess: function(transport){
          var response = transport.responseText || "error, no responseText";
          var json = response.evalJSON();
          var html = new EJS({url: '/templates/chat.ejs'}).render(json);
          $('messages').insert({"bottom":html});
          $('load-indicator').hide();
          Misc.pageScroll();
        },
        onFailure: function(){ alert('Something went wrong...') }
      });
      
  	});
  </script>
</head>

<body id="messages_layout" onLoad="Misc.focusInput('message_message');stomp_function();">

	<div id="header_container"><%= render(:partial => "shared/header") %></div>
	

	<div id="main_content" class="container">
    
		<div id="col1" class="span-14">
		    <%= flash_messages %>
  		  <% if (logged_in? && @conversation.readable_by?(current_user)) || !@conversation.private? %>
  		  
  		  <%= yield  %>
  		  
  		  <div id="attachment_form" style="display:none"><div id="attachment_form_padding">
    	    <%#this form is purely for attachments handling%>
    	    <% form_for(:message, 
    	    	:url  => { :controller => "messages", :action => "upload_attachment", :conversation_id => @conversation.id },
    	      :html => { :multipart => true, :target => "upload_frame", :id => 'atchform' } ) do |f| %>
    	        <%= f.file_field :attachment %>
    	    	  <input type="hidden" name="conversation_id" id="conversation_id" value="<%= @conversation.id %>" />
    	    	  <p id="attach_msgtextarea">        
                <%= f.text_area :message, :onkeyup => "FitToTextAndMoveMessagesUp(this, (document.viewport.getHeight() - 300));Misc.pageScroll();", :class => 'messageinput', :id => "attch_message" %>  
              </p>
              <p class="out_of_screen"><%= label_tag "important" %><input id="message_something" name="message[something]" onfocus="javascript:$('attch_message').focus()" size="30" type="text" /></p>
    	    	  <%= submit_tag t("ui.attach") %>
    	    	  <%= link_to_function t("ui.cancel") do |page|
                page[:attachment_form].hide
                page[:attachment_link].show
                page.textarea.sync('attch_message','message_message')
                page[:atchform].reset
              end %>
    	    <% end %>
    	    
    	    <iframe id='upload_frame' name="upload_frame" style="width:0px;height:0px;border:0px" src="about:blank"></iframe>
        </div></div>
        
		    <div id="messagesform"><div id="messagesform_padding">
		      <span id="working" style="display:none;"><%= image_tag "/images/icons/waves.png" %></span>
			    <div id="messageinputdiv">
		        <% if logged_in? && @conversation.writable_by?(current_user) %>
              <% remote_form_for(:message,
              	:update => 'messages', :position => 'bottom',
                :url => conversation_messages_path(@conversation),
                :loading => "$('msgform').disable();",
                :complete => "$('msgform').enable();$('message_message').value = '';$('message_attachment').value = '';$('message_message').style.height = '3em';$('message_message').focus();$('messages').setStyle('padding-bottom: 96px');$('working').fade({ duration: 0.3 });",
                # don't poll right now, and set the "after" value
                :before => "$('working').appear({ duration: 0.3 });",
                :condition => "$('message_message').value.strip().length > 0",
                :html => {:id => 'msgform'}) do |f| %>
                 
                <p class="out_of_screen"><%= label_tag "important" %><input id="message_something" name="message[something]" onfocus="javascript:$('message_message').focus()" size="30" type="text" /></p>
                
                <p id="msgtextarea">        
                  <%= f.text_area :message, :onkeyup => "FitToTextAndMoveMessagesUp(this, (document.viewport.getHeight() - 300));Misc.pageScroll();", :class => 'messageinput' %>  
                </p>
                  
                <p id="msgcontrols">
                  <%= submit_tag t("ui.send") %> <span class="mute"><%= t("ui.shift_enter") %></span>
                    
                  <%= link_to_function t("ui.attach_file"), :id => 'attachment_link' do |page|
                    page[:attachment_form].show
                    page[:attachment_link].hide
                    page.textarea.sync('message_message','attch_message')
                  end %>
                </p>
              <% end %>
            <% else %>
              <% if logged_in? %>
                <h4 class="center"><%= t("conversations.this_is_an_read_only_convo") %></h4>
              <% else %>
                <h4 class="center"><%= t("conversations.login_or_register_to_participate") %></h4>
              <% end %>
		        <% end#if current_user%>
          </div>
          
        
        </div></div>
        <% else %>
  		    <h4 class="center">Sorry, this is a private conversation</h4>
  		  <% end %>
		</div>
		
    <div id="sidebars" class="span-10 last">
      &nbsp;
      <div id="sidebars_container">
	      
			  <%= render :partial => 'messages/convo_controls' %>
		
        
      	<ul id="convo_tabs" class="subsection_tabs span-10">  
      		<li class="tab"><a href="#dashboard">dashboard</a></li>  
      		<!-- <li class="tab"><a href="#tags">tags</a></li> -->
      		<li class="tab"><a href="#followers">followers</a></li>
      	</ul>
      		
		    <div id="dashboard" class="span-10">
		      <div  class="span-6">
		        <%= render :partial => 'users/recently_visited' %>
		        <%= render :partial => 'users/news' %>
		      </div>
		      <div class="span-4 last">
		        <div id="recent_followers" class="item2 page">
            	<h6><%= t("ui.messages") %>:</h6>
            	<%= link_to t("ui.all"), conversation_path(@conversation)%><br/>
              <%= link_to t("ui.with_files"), files_conversation_path(@conversation)%><br/>
              <%= link_to t("ui.with_images"), images_conversation_path(@conversation)%>
            </div>
		        
		        <%= render :partial => 'conversations/recent_followers' %>
		        <%# render :partial => 'conversations/last_convo_tags' %>
		      </div>
		    </div>
		    
		    <!--
		      # removed tags stuff
		      #------------------------------------------------------------------------------
		      <div id="tags"  class="span-10">
		        <%# render :partial => 'conversations/convo_tags' %>
          </div>
        -->
        
        <div id="followers"  class="span-10">
		      <%= render :partial => 'conversations/users_in_conversation' %>
        </div>
        
      </div>
      
   </div>
	</div>

	<div id="footer_container"><%= render(:partial => "shared/footer") %></div>

	<%#for now lets poll for new messages in conversations that are off the screen%>  
	<%= periodically_call_remote :url => {:controller => 'users', :action => 'update_news', :conversation_id => @conversation.id}, 
		:frequency => 60, :complete => 'ShowUnreadMessagesInFLuidapp();' %>
  
  <%#do not remove rhis scrips tag, used by google stats, ie6 detector, etc...%>
  <%#----------------------------------------------------------------------------%>
  <%= render :partial => "shared/scripts"%>
</body>
</html>
